name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    name: Build image and push to Docker Hub
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 'lts/*'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Next.js app
      env:
        NEXT_PUBLIC_CLIENT_ID: ${{ secrets.CLIENT_ID }}
        NEXT_PUBLIC_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        NEXT_PUBLIC_BACKEND_URL: ${{ secrets.BACKEND_URL }}
        NEXT_PUBLIC_REDIS_HOST: ${{ secrets.REDIS_HOST }}
        NEXT_PUBLIC_REDIS_PORT: ${{ secrets.REDIS_PORT }}
        NEXT_PUBLIC_POCKETBASE_URL: ${{ secrets.POCKETBASE_URL }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        REDIS_HOST: ${{ secrets.REDIS_HOST }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
        POCKETBASE_URL: ${{ secrets.POCKETBASE_URL }}
      run: npm run build
      
    - name: Create env.local file
      run: |
        echo "NEXT_PUBLIC_CLIENT_ID=${{ secrets.CLIENT_ID }}" >> env.local
        echo "NEXT_PUBLIC_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> env.local
        echo "NEXT_PUBLIC_BACKEND_URL=${{ secrets.BACKEND_URL }}" >> env.local
        echo "NEXT_PUBLIC_REDIS_HOST=${{ secrets.REDIS_HOST }}" >> env.local
        echo "NEXT_PUBLIC_REDIS_PORT=${{ secrets.REDIS_PORT }}" >> env.local
        echo "NEXT_PUBLIC_POCKETBASE_URL=${{ secrets.POCKETBASE_URL }}" >> env.local
        echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> env.local
        echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> env.local
        echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> env.local
        echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> env.local
        echo "POCKETBASE_URL=${{ secrets.POCKETBASE_URL }}" >> env.local
      
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: bennischober/talenzz-prototype

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
